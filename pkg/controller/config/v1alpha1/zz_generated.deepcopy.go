//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtensionConfig) DeepCopyInto(out *ExtensionConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	if in.NTP != nil {
		in, out := &in.NTP, &out.NTP
		*out = new(NTPConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtensionConfig.
func (in *ExtensionConfig) DeepCopy() *ExtensionConfig {
	if in == nil {
		return nil
	}
	out := new(ExtensionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExtensionConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NTPConfig) DeepCopyInto(out *NTPConfig) {
	*out = *in
	if in.NTPD != nil {
		in, out := &in.NTPD, &out.NTPD
		*out = new(NTPDConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NTPConfig.
func (in *NTPConfig) DeepCopy() *NTPConfig {
	if in == nil {
		return nil
	}
	out := new(NTPConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NTPDConfig) DeepCopyInto(out *NTPDConfig) {
	*out = *in
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NTPDConfig.
func (in *NTPDConfig) DeepCopy() *NTPDConfig {
	if in == nil {
		return nil
	}
	out := new(NTPDConfig)
	in.DeepCopyInto(out)
	return out
}
